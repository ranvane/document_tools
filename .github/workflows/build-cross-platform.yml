name: 构建跨平台可执行文件

on:
  workflow_dispatch:
    inputs:
      reason:
        description: '构建原因'
        required: true
        default: '手动触发构建'

jobs:
  build:
    name: 在 ${{ matrix.os }} 上构建
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
#          - macos-latest
        script:
          - document_cropper.py
          - document_image_merger.py

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装依赖
        shell: bash
        run: |
          echo "正在安装依赖包..."

          # Ubuntu 特别处理（wxPython 安装跳过或失败容忍）
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt update
            sudo apt install -y python3-wxgtk4.0
            pip install -r requirements.txt || true
            echo "注意：wxPython 可能未在 Ubuntu 上成功安装"
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pip install -r requirements.txt
            pip install -i https://wxpython.org/Phoenix/snapshot-builds/ wxPython
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew install wxpython
            pip install -r requirements.txt
          fi

          pip install pyinstaller

      - name: 使用 PyInstaller 构建可执行文件
        shell: bash
        run: |
          echo "正在构建 ${{ matrix.script }}"
          pyinstaller --onefile "${{ matrix.script }}" || echo "构建失败，但继续"

      - name: 重命名可执行文件
        shell: bash
        run: |  
          mkdir -p dist/executables
          
          base_name=$(basename "${{ matrix.script }}" .py)

          case "${{ matrix.os }}" in
            windows-latest) ext=".exe";;
            *) ext="";;
          esac

          target_name="${base_name}_$(echo ${{ matrix.os }} | cut -d'-' -f1)${ext}"

          if [ -f "dist/${base_name}${ext}" ]; then
            mv "dist/${base_name}${ext}" "dist/executables/${target_name}"
          else
            echo "跳过：未生成 ${base_name}${ext}"
          fi

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        if: success() || always()
        with:
          name: executables-${{ matrix.os }}
          path: dist/executables/

name: 构建跨平台可执行文件

on:
  workflow_dispatch:  # 改为手动触发
    inputs:
      reason:
        description: '构建原因'
        required: true
        default: '手动触发构建'

jobs:
  build:
    name: 在 ${{ matrix.os }} 上构建
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        script:
          - document_cropper.py
          - document_image_merger.py
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装依赖
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 使用 PyInstaller 构建可执行文件
        run: |
          echo "正在构建 ${{ matrix.script }}"
          pyinstaller --onefile "${{ matrix.script }}"

      - name: 重命名可执行文件
        run: |  
          mkdir -p dist/executables  # 创建目标文件夹
          
          # 提取脚本基础名称（如：document_cropper）
          base_name=$(basename ${{ matrix.script }} .py)  
          
          # 判断平台并设置扩展名
          case "${{ matrix.os }}" in
            windows-latest) ext=".exe";;  # Windows 使用 .exe 扩展名
            *) ext="";;  # 其他平台没有扩展名
          esac

          # 构造目标文件名
          target_name="${base_name}_$(echo ${{ matrix.os }} | cut -d'-' -f1)${ext}"
          
          # 移动文件到目标文件夹并重命名
          mv dist/$(basename ${{ matrix.script }} .py) dist/executables/$target_name

      - name: 上传构建结果
        uses: actions/upload-artifact@v4  # 更新到v4版本
        with:
          name: executables-${{ matrix.os }}  # 使用平台名作为上传包的名称
          path: dist/executables/  # 上传文件夹
